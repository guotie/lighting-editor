{"version":3,"sources":["../../lighting-editor/es/components/Button.js","../../lighting-editor/es/components/ImageButton.js","../../lighting-editor/es/components/Toolbar.js","../../lighting-editor/es/components/BlockButton.js","../../lighting-editor/es/components/MarkButton.js","../../lighting-editor/es/components/ImageElement.js","../../lighting-editor/es/editor.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","styled","span","props","active","reversed","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","insertImage","editor","url","image","type","children","text","console","log","selection","Transforms","insertNodes","withImages","insertData","isVoid","element","data","files","length","file","reader","FileReader","split","addEventListener","src","Buffer","from","toString","readAsDataURL","ImageButton","icon","uploadFn","useSlate","_jsxs","Object","assign","onMouseDown","event","preventDefault","onClick","document","querySelector","click","_jsx","className","id","accept","style","display","onChange","target","evt","info","img","Image","alt","name","onload","width","height","uri","Toolbar","LIST_TYPES","isBlockActive","format","Editor","nodes","match","n","isEditor","SlateElement","isElement","BlockButton","isActive","isList","includes","unwrapNodes","newProperties","setNodes","block","wrapNodes","toggleBlock","toggleMark","isMarkActive","removeMark","addMark","marks","MarkButton","Img","selected","focused","ImageElement","attributes","useSelected","useFocused","contentEditable","HOTKEYS","EditorContainer","div","LightingEditor","editProps","_a","_b","useState","content","setValue","renderElement","useCallback","Element","renderLeaf","Leaf","useMemo","withHistory","withReact","createEditor","Slate","uploadImg","Editable","placeholder","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","leaf","bold","code","italic","underline","App","viewBox","x1","y1","x2","y2","gradientUnits","offset","stopColor","fill","fillRule","stroke","strokeWidth","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b16500e6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst Button = styled.span `\r\n  height: 32px;\r\n  line-height: 32px;\r\n  text-align: center;\r\n  width: 32px;\r\n  min-width: 32px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n    border: 1px solid transparent;\r\n  };\r\n  background-color: ${(props) => props.active ? '#e8e8e8' : '595959'};\r\n  border: 1px solid transparent;\r\n  color: ${(props) => props.reversed\r\n    ? props.active\r\n        ? 'white'\r\n        : '#aaa'\r\n    : props.active\r\n        ? 'black'\r\n        : '#595959'};\r\n`;\r\nexport default Button;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { Transforms } from 'slate';\r\nimport { useSlate } from 'slate-react';\r\nimport Button from './Button';\r\nconst insertImage = (editor, url) => {\r\n    // const text = { text: '' }\r\n    const image = { type: 'image', url, children: [{ text: '' }] };\r\n    console.log('editor selection:', editor.selection);\r\n    Transforms.insertNodes(editor, image);\r\n};\r\nconst withImages = (editor) => {\r\n    const { insertData, isVoid } = editor;\r\n    editor.isVoid = element => {\r\n        return element.type === 'image' ? true : isVoid(element);\r\n    };\r\n    editor.insertData = data => {\r\n        // const text = data.getData('text/plain')\r\n        const { files } = data;\r\n        console.log('insert image data:', files);\r\n        if (files && files.length > 0) {\r\n            for (const file of files) {\r\n                const reader = new FileReader();\r\n                const [mime] = file.type.split('/');\r\n                if (mime === 'image') {\r\n                    reader.addEventListener('load', () => {\r\n                        const url = reader.result;\r\n                        let src = typeof url === 'string' ? url : Buffer.from(url).toString();\r\n                        insertImage(editor, src);\r\n                    });\r\n                    reader.readAsDataURL(file);\r\n                }\r\n            }\r\n            // } else if (isImageUrl(text)) {\r\n            //   insertImage(editor, text)\r\n        }\r\n        else {\r\n            insertData(data);\r\n        }\r\n    };\r\n    return editor;\r\n};\r\n//\r\nconst ImageButton = ({ icon, uploadFn }) => {\r\n    const editor = useSlate();\r\n    return (_jsxs(Button, Object.assign({ active: false, onMouseDown: (event) => {\r\n            // 如果这里没有 preventDefault 则在下面的onClick中，editor.selection 为空\r\n            event.preventDefault();\r\n        }, onClick: (event) => {\r\n            // console.log('clicked image btn:', editor.selection)\r\n            let element = document.querySelector('#editor-image-upload');\r\n            element.click();\r\n        } }, { children: [_jsx(\"i\", { className: icon }, void 0),\r\n            _jsx(\"input\", { id: \"editor-image-upload\", type: \"file\", accept: \"image/*\", style: { display: 'none' }, onChange: (event) => __awaiter(void 0, void 0, void 0, function* () {\r\n                    event.preventDefault();\r\n                    let file = event.target.files && event.target.files[0];\r\n                    console.log('file', file);\r\n                    if (!file) {\r\n                        return;\r\n                    }\r\n                    console.log('image upload:', file);\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(file);\r\n                    reader.addEventListener('load', (evt) => {\r\n                        console.log('evt:', evt);\r\n                        console.info(reader);\r\n                        let data = evt.target.result;\r\n                        let img = new Image();\r\n                        img.src = typeof data === 'string' ? data : Buffer.from(data).toString();\r\n                        img.alt = file.name;\r\n                        img.onload = function () {\r\n                            console.log('img width height:', img.width, img.height);\r\n                        };\r\n                        if (!uploadFn) {\r\n                            insertImage(editor, img.src);\r\n                        }\r\n                        // const text = { text: '' }\r\n                        // const image = { type: 'image', url: img.src, children: [text] }\r\n                        // Transforms.insertNodes(editor, image)\r\n                        // editor.insertData(img)\r\n                    });\r\n                    if (uploadFn) {\r\n                        let uri = yield uploadFn(file);\r\n                        insertImage(editor, uri);\r\n                    }\r\n                }) }, void 0)] }), void 0));\r\n};\r\nexport { withImages, ImageButton };\r\n","import { jsx as _jsx } from \"react/jsx-runtime\";\r\n// import styled from 'styled-components'\r\n// const Menu = styled.div`\r\n// & > * {\r\n//   display: inline-block;\r\n// }\r\n// & > * + * {\r\n//   margin-left: 5px;\r\n//   padding-left: 5px;\r\n//   padding-right: 5px;\r\n// }\r\n// `\r\n// const Toolbar = styled(Menu)`\r\n//   position: relative;\r\n//   padding: 5px 2px ;\r\n//   // margin: 0;\r\n//   border-bottom: 2px solid #eee;\r\n//   margin-bottom: 10px;\r\n//   font-size: 14px; // 0.6rem;\r\n//   background: #fcfcfc;\r\n//   border-bottom: 1px solid #e8e8e8;\r\n//   transition: all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1);\r\n// `\r\nconst Toolbar = ({ children }) => {\r\n    return (_jsx(\"div\", Object.assign({ \"data-slate-toolbar\": \"true\" }, { children: children }), void 0));\r\n};\r\nexport default Toolbar;\r\n","import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Editor, Transforms, Element as SlateElement } from 'slate';\r\nimport { useSlate } from 'slate-react';\r\nimport Button from './Button';\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list'];\r\nconst isBlockActive = (editor, format) => {\r\n    const [match] = Editor.nodes(editor, {\r\n        match: n => !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\r\n    });\r\n    return !!match;\r\n};\r\nconst toggleBlock = (editor, format) => {\r\n    const isActive = isBlockActive(editor, format);\r\n    const isList = LIST_TYPES.includes(format);\r\n    console.log('toggleBlock: selection:', editor.selection);\r\n    Transforms.unwrapNodes(editor, {\r\n        match: n => LIST_TYPES.includes(\r\n        // @ts-ignore\r\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type),\r\n        split: true,\r\n    });\r\n    const newProperties = {\r\n        type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n    };\r\n    Transforms.setNodes(editor, newProperties);\r\n    if (!isActive && isList) {\r\n        const block = { type: format, children: [] };\r\n        Transforms.wrapNodes(editor, block);\r\n    }\r\n};\r\nconst BlockButton = ({ format, icon }) => {\r\n    const editor = useSlate();\r\n    return (_jsx(Button, Object.assign({ active: isBlockActive(editor, format), onMouseDown: (event) => {\r\n            event.preventDefault();\r\n            toggleBlock(editor, format);\r\n        } }, { children: _jsx(\"i\", { className: icon }, void 0) }), void 0));\r\n};\r\nexport default BlockButton;\r\n","import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Editor } from 'slate';\r\nimport { useSlate } from 'slate-react';\r\nimport Button from './Button';\r\nconst toggleMark = (editor, format) => {\r\n    const isActive = isMarkActive(editor, format);\r\n    if (isActive) {\r\n        Editor.removeMark(editor, format);\r\n    }\r\n    else {\r\n        Editor.addMark(editor, format, true);\r\n    }\r\n};\r\nconst isMarkActive = (editor, format) => {\r\n    const marks = Editor.marks(editor);\r\n    return marks ? marks[format] === true : false;\r\n};\r\nconst MarkButton = ({ format, icon }) => {\r\n    const editor = useSlate();\r\n    return (_jsx(Button, Object.assign({ active: isMarkActive(editor, format), onMouseDown: (event) => {\r\n            event.preventDefault();\r\n            toggleMark(editor, format);\r\n        } }, { children: _jsx(\"i\", { className: icon }, void 0) }), void 0));\r\n};\r\nexport { toggleMark, MarkButton };\r\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useSelected, useFocused, } from 'slate-react';\r\nimport styled from 'styled-components';\r\nconst Img = styled.img `\r\n    display: block;\r\n    max-width: 100%;\r\n    box-shadow: ${(props) => props.selected && props.focused ? '0 0 0 2px blue;' : 'none'};\r\n`;\r\n// todo max-width\r\nconst ImageElement = ({ attributes, children, element }) => {\r\n    const selected = useSelected();\r\n    const focused = useFocused();\r\n    return (_jsxs(\"div\", Object.assign({}, attributes, { children: [_jsx(\"div\", Object.assign({ contentEditable: false }, { children: _jsx(Img, { src: element.url, focused: focused, selected: selected }, void 0) }), void 0), children] }), void 0));\r\n};\r\nexport default ImageElement;\r\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useCallback, useMemo, useState } from 'react';\r\nimport isHotkey from 'is-hotkey';\r\n// Import the Slate components and React plugin.\r\nimport { Editable, withReact, Slate } from 'slate-react';\r\n// Import the Slate editor factory.\r\nimport { createEditor } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport styled from 'styled-components';\r\nimport Toolbar from './components/Toolbar';\r\nimport BlockButton from './components/BlockButton';\r\nimport { toggleMark, MarkButton } from './components/MarkButton';\r\nimport { withImages, ImageButton } from './components/ImageButton';\r\nimport ImageElement from './components/ImageElement';\r\nconst HOTKEYS = {\r\n    'mod+b': 'bold',\r\n    'mod+i': 'italic',\r\n    'mod+u': 'underline',\r\n    'mod+`': 'code',\r\n};\r\nconst EditorContainer = styled.div `\r\n  width: ${(props) => props.width ? props.width : '600px'};\r\n`;\r\n// LightingEditor\r\nconst LightingEditor = (editProps) => {\r\n    var _a, _b;\r\n    const [value, setValue] = useState((_a = editProps.content) !== null && _a !== void 0 ? _a : [{\r\n            type: 'paragraph',\r\n            children: [{ text: '' }]\r\n        }]);\r\n    const renderElement = useCallback(props => _jsx(Element, Object.assign({}, props), void 0), []);\r\n    const renderLeaf = useCallback(props => _jsx(Leaf, Object.assign({}, props), void 0), []);\r\n    const editor = useMemo(() => withImages(withHistory(withReact(createEditor()))), []);\r\n    return (_jsx(EditorContainer, Object.assign({ width: (_b = editProps.width) !== null && _b !== void 0 ? _b : '800px', className: \"slate-editor\" }, { children: _jsxs(Slate, Object.assign({ editor: editor, value: value, onChange: value => setValue(value) }, { children: [_jsxs(Toolbar, { children: [_jsx(BlockButton, { format: \"heading-one\", icon: \"fas fa-heading\" }, void 0),\r\n                        _jsx(BlockButton, { format: \"heading-two\", icon: \"fas fa-heading\" }, void 0),\r\n                        _jsx(MarkButton, { format: \"bold\", icon: \"fas fa-bold\" }, void 0),\r\n                        _jsx(MarkButton, { format: \"italic\", icon: \"fas fa-italic\" }, void 0),\r\n                        _jsx(MarkButton, { format: \"underline\", icon: \"fas fa-underline\" }, void 0),\r\n                        _jsx(MarkButton, { format: \"code\", icon: \"fas fa-code\" }, void 0),\r\n                        _jsx(BlockButton, { format: \"block-quote\", icon: \"fas fa-quote-left\" }, void 0),\r\n                        _jsx(ImageButton, { icon: \"fas fa-image\", uploadFn: editProps.uploadImg }, void 0),\r\n                        _jsx(BlockButton, { format: \"numbered-list\", icon: \"fas fa-list-ol\" }, void 0),\r\n                        _jsx(BlockButton, { format: \"bulleted-list\", icon: \"fas fa-list-ul\" }, void 0)] }, void 0),\r\n                _jsx(Editable, { renderElement: renderElement, renderLeaf: renderLeaf, placeholder: \"Enter some rich text\\u2026\", spellCheck: true, autoFocus: true, onKeyDown: event => {\r\n                        for (const hotkey in HOTKEYS) {\r\n                            if (isHotkey(hotkey, event)) {\r\n                                event.preventDefault();\r\n                                const mark = HOTKEYS[hotkey];\r\n                                toggleMark(editor, mark);\r\n                            }\r\n                        }\r\n                    } }, void 0)] }), void 0) }), void 0));\r\n};\r\nconst Element = ({ attributes, children, element }) => {\r\n    switch (element.type) {\r\n        case 'block-quote':\r\n            return _jsx(\"blockquote\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'bulleted-list':\r\n            return _jsx(\"ul\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'heading-one':\r\n            return _jsx(\"h1\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'heading-two':\r\n            return _jsx(\"h2\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'list-item':\r\n            return _jsx(\"li\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'numbered-list':\r\n            return _jsx(\"ol\", Object.assign({}, attributes, { children: children }), void 0);\r\n        case 'image':\r\n            let props = { attributes, children, element };\r\n            return _jsx(ImageElement, Object.assign({}, props), void 0);\r\n        default:\r\n            return _jsx(\"p\", Object.assign({}, attributes, { children: children }), void 0);\r\n    }\r\n};\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n    if (leaf.bold) {\r\n        children = _jsx(\"strong\", { children: children }, void 0);\r\n    }\r\n    if (leaf.code) {\r\n        children = _jsx(\"code\", { children: children }, void 0);\r\n    }\r\n    if (leaf.italic) {\r\n        children = _jsx(\"em\", { children: children }, void 0);\r\n    }\r\n    if (leaf.underline) {\r\n        children = _jsx(\"u\", { children: children }, void 0);\r\n    }\r\n    return _jsx(\"span\", Object.assign({}, attributes, { children: children }), void 0);\r\n};\r\nexport { LightingEditor };\r\n","import './App.scss';\n// @ts-ignore\nimport { LightingEditor } from 'lighting-editor'\n\n// import '@fortawesome/fontawesome-free'\n\nfunction App() {\n  const initialValue = [\n    {\n      type: 'paragraph',\n      children: [\n        { text: 'This is editable ' },\n        { text: 'rich', bold: true },\n        { text: ' text, ' },\n        { text: 'much', italic: true },\n        { text: ' better than a ' },\n        { text: '<textarea>', code: true },\n        { text: '!' },\n      ],\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          text:\n            \"Since it's rich text, you can do things like turn a selection of text \",\n        },\n        { text: 'bold', bold: true },\n        {\n          text:\n            ', or add a semantically rendered block quote in the middle of the page, like this:',\n        },\n      ],\n    },\n    {\n      type: 'block-quote',\n      children: [{ text: 'A wise quote.' }],\n    },\n    {\n      type: 'paragraph',\n      children: [{ text: 'Try it out for yourself!' }],\n    },\n  ]\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <svg width=\"50px\" height=\"100px\" viewBox=\"0 0 23 34\">\n        <defs>\n          <linearGradient id=\"orange_red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\" gradientUnits=\"userSpaceOnUse\">\n              <stop offset=\"0%\" stopColor=\"blue\"/>\n              <stop offset=\"100%\" stopColor=\"red\"/>\n          </linearGradient>\n        </defs>\n        <path style={{fill: 'url(#orange_red)'}} fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" d=\"M0 19.9187087L9.87007874 19.9187087 4.12007874 34 23 13.9612393 13.0846457 13.9612393 18.7893701 0z\">\n          </path>\n      </svg>\n        <LightingEditor content={initialValue} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}